/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.City;
import model.Patient;
import model.PatientDirectory;

/**
 *
 * @author NetrA
 */
public class EditPatient extends javax.swing.JPanel {

    /**
     * Creates new form EditPatient
     */
    PatientDirectory history;
    City city;
   public EditPatient(PatientDirectory history,City city) {
        initComponents();
        this.city=city;
        this.history = history;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtPatID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPatName = new javax.swing.JTextField();
        txtPatAge = new javax.swing.JTextField();
        txtPatPhone = new javax.swing.JTextField();
        txtPatResidence = new javax.swing.JTextField();
        txtPatCommunity = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 102, 102));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setForeground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Retrieve Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 110, -1, -1));

        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Enter Patient ID");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 110, -1, -1));

        txtPatID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatIDKeyReleased(evt);
            }
        });
        add(txtPatID, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 110, 152, -1));

        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, -1, -1));

        txtPatName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatNameKeyReleased(evt);
            }
        });
        add(txtPatName, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, 152, -1));

        txtPatAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatAgeKeyReleased(evt);
            }
        });
        add(txtPatAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, 152, -1));

        txtPatPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatPhoneKeyReleased(evt);
            }
        });
        add(txtPatPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 300, 152, -1));

        txtPatResidence.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatResidenceKeyReleased(evt);
            }
        });
        add(txtPatResidence, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 350, 152, -1));

        txtPatCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPatCommunityKeyReleased(evt);
            }
        });
        add(txtPatCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 152, -1));

        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Age");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 260, -1, -1));

        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Ph No");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, -1, -1));

        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Residence");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, -1, -1));

        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Community");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 400, -1, -1));

        btnSave.setForeground(new java.awt.Color(0, 102, 102));
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 470, -1, -1));

        jLabel7.setForeground(new java.awt.Color(0, 153, 153));
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 210, 200, 20));

        jLabel8.setForeground(new java.awt.Color(0, 153, 153));
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 250, 220, 20));

        jLabel9.setForeground(new java.awt.Color(0, 153, 153));
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 300, 220, 20));

        jLabel10.setForeground(new java.awt.Color(0, 153, 153));
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 350, 230, 20));

        jLabel11.setForeground(new java.awt.Color(0, 153, 153));
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 390, 230, 20));

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 102, 102));
        jLabel12.setText("Update Patient Information");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 40, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       Integer iD=Integer.parseInt(txtPatID.getText()); 
       for(int i=0; i<history.getpatientDirectory().size(); i++)
        {
       int patientid = (history.getpatientDirectory().get(i).getPatientID());
    if(iD == patientid)
    {
        txtPatName.setText(history.getpatientDirectory().get(i).getName());
        txtPatAge.setText(history.getpatientDirectory().get(i).getAge().toString());
        txtPatPhone.setText(history.getpatientDirectory().get(i).getMobileNo().toString());
        txtPatResidence.setText(history.getpatientDirectory().get(i).getHouse().getHouseNumber());
        txtPatCommunity.setText(city.getCommunityList().get(i).getCommunityName());
   
    }
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
         Integer iD=Integer.parseInt(txtPatID.getText()); 
         
       for(int i=0; i<history.getpatientDirectory().size(); i++)
        {
       int patientid = (history.getpatientDirectory().get(i).getPatientID());
    if(iD == patientid)
    {
        history.getpatientDirectory().get(i).setName(txtPatName.getText());
        history.getpatientDirectory().get(i).setAge(Integer.parseInt(txtPatAge.getText()));
        history.getpatientDirectory().get(i).setMobileNo(Integer.parseInt(txtPatPhone.getText()));
        history.getpatientDirectory().get(i).getHouse().setHouseNumber(txtPatResidence.getText());
        city.getCommunityList().get(i).setCommunityName(txtPatCommunity.getText());
        //TODO other details
        
    }
     else{
             JOptionPane.showMessageDialog(this,"No Patient for given Patient ID found");  
               }
        }
      
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtPatIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatIDKeyReleased
        // TODO add your handling code here:
        
//        String PATTERN1="^[0-9]{1,4}$";
//       Pattern patt=Pattern.compile(PATTERN1);
//       Matcher match=patt.matcher(txtPatID.getText().toString());
//       if(!match.matches()){
//       txtPatID.setBackground(Color.red);
//       }
//       
//       else  {
//       txtPatID.setBackground(Color.white);
//       }
        
    }//GEN-LAST:event_txtPatIDKeyReleased

    private void txtPatNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatNameKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z- ]{5,10}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtPatName.getText());
       if(!match.matches()){
       jLabel7.setText("Name format is incorrect");
       }
       
    }//GEN-LAST:event_txtPatNameKeyReleased

    private void txtPatAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatAgeKeyReleased
        // TODO add your handling code here:
        String PATTERN1="^[0-9]{1,4}$";
       Pattern patt=Pattern.compile(PATTERN1);
       Matcher match=patt.matcher(txtPatID.getText().toString());
       if(!match.matches()){
       jLabel8.setText("Patient ID is incorrect");
       }
       
       else  {
       jLabel8.setText(null);
       }
        for(int i=0; i<history.getpatientDirectory().size(); i++){ 
            
            Patient p=history.getpatientDirectory().get(i);
            if (Integer.parseInt(txtPatID.getText())==p.getPatientID()){
                jLabel8.setText("Patient ID is Duplicate");
               txtPatID.setBackground(Color.red);
            }}
    }//GEN-LAST:event_txtPatAgeKeyReleased

    private void txtPatPhoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatPhoneKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9]{9,9}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtPatPhone.getText());
       if(!match.matches()){
       jLabel9.setText("Mobile Number  is incorrect");
       }
       else{
       jLabel9.setText(null);
       }
       
       if((txtPatPhone.getText()).isEmpty()){
           jLabel9.setText("Mobile Number cannot be empty");
       }
        
    }//GEN-LAST:event_txtPatPhoneKeyReleased

    private void txtPatResidenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatResidenceKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z-0-9- ]{5,15}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtPatResidence.getText());
       if(!match.matches()){
       jLabel10.setText("Residence is incorrect");
       }
       else{
       jLabel10.setText(null);
       }
       
       if((txtPatResidence.getText()).isEmpty()){
           jLabel10.setText("Residence cannot be empty");
       }
    }//GEN-LAST:event_txtPatResidenceKeyReleased

    private void txtPatCommunityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPatCommunityKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]{5,9}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtPatCommunity.getText());
       if(!match.matches()){
       jLabel11.setText("Community format is incorrect");
       }
       else{
       jLabel11.setText(null);
       }
       
       if((txtPatCommunity.getText()).isEmpty()){
           jLabel11.setText("Community cannot be empty");
       }
    }//GEN-LAST:event_txtPatCommunityKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtPatAge;
    private javax.swing.JTextField txtPatCommunity;
    private javax.swing.JTextField txtPatID;
    private javax.swing.JTextField txtPatName;
    private javax.swing.JTextField txtPatPhone;
    private javax.swing.JTextField txtPatResidence;
    // End of variables declaration//GEN-END:variables
}
