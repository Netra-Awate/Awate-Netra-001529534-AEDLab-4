/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ui;

import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import model.City;
import model.Community;
import model.Encounter;
import model.EncounterHistory;
import model.House;
import model.Patient;
import model.PatientDirectory;
import model.VitalSigns;

/**
 *
 * @author NetrA
 */
public class NewPatientJPanel extends javax.swing.JPanel {

    /**
     * Creates new form GraphJPanel
     */
    PatientDirectory history;
    City city;
    public NewPatientJPanel(PatientDirectory history,City city) {
        initComponents();
        this.history = history;
        this.city=city;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtPhoneNo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtResidence = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnAdminLogin = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtBP = new javax.swing.JTextField();
        txtPulse = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        txtRespiration = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(2000, 2000));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 1000));
        jPanel1.setPreferredSize(new java.awt.Dimension(622, 600));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Name:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, -1, -1));

        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Patient ID:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 140, -1, -1));

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        jPanel1.add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 170, -1));

        txtID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIDKeyReleased(evt);
            }
        });
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 130, 170, -1));

        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Age:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, 30, 20));

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });
        jPanel1.add(txtAge, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 170, 170, -1));

        txtPhoneNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPhoneNoKeyReleased(evt);
            }
        });
        jPanel1.add(txtPhoneNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 210, 170, -1));

        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Phone No:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 220, -1, -1));

        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Residence:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, 80, -1));

        txtResidence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResidenceActionPerformed(evt);
            }
        });
        txtResidence.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtResidenceKeyReleased(evt);
            }
        });
        jPanel1.add(txtResidence, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 250, 170, -1));

        txtCommunity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCommunityKeyReleased(evt);
            }
        });
        jPanel1.add(txtCommunity, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, 170, -1));

        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Community:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 290, -1, 30));

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setText("Person details");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 30, -1, -1));

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Vital signs");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, -1, -1));

        btnAdminLogin.setForeground(new java.awt.Color(0, 102, 102));
        btnAdminLogin.setText("Add Patient");
        btnAdminLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdminLoginActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdminLogin, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 570, -1, -1));

        jLabel12.setForeground(new java.awt.Color(0, 102, 102));
        jLabel12.setText("Blood Pressure:");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 450, -1, 30));

        jLabel13.setForeground(new java.awt.Color(0, 102, 102));
        jLabel13.setText("Pulse rate:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 500, -1, 30));

        txtBP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBPActionPerformed(evt);
            }
        });
        txtBP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBPKeyReleased(evt);
            }
        });
        jPanel1.add(txtBP, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, 170, -1));

        txtPulse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPulseKeyReleased(evt);
            }
        });
        jPanel1.add(txtPulse, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 500, 170, -1));

        jLabel14.setForeground(new java.awt.Color(0, 102, 102));
        jLabel14.setText("Body Temperature:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 450, -1, 30));

        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });
        txtTemperature.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTemperatureKeyReleased(evt);
            }
        });
        jPanel1.add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 450, 170, -1));

        txtRespiration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRespirationKeyReleased(evt);
            }
        });
        jPanel1.add(txtRespiration, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 500, 170, -1));

        jLabel15.setForeground(new java.awt.Color(0, 102, 102));
        jLabel15.setText("Respiration:");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 500, -1, 30));

        jLabel16.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 330, 210, 20));

        jLabel17.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 90, 210, 20));

        jLabel18.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 130, 210, 20));

        jLabel19.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 170, 210, 20));

        jLabel20.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 210, 210, 20));

        jLabel21.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 250, 210, 20));

        jLabel22.setForeground(new java.awt.Color(0, 204, 204));
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 290, 210, 20));
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 160, 240, 20));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 882, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 665, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1335, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdminLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdminLoginActionPerformed
        // TODO add your handling code here:
       // AdminStatJPanel adminpanel = new AdminStatJPanel();
   //  splitPane.setComponentRight(adminpanel);
//   NewPatientJFrame adminframe = new NewPatientJFrame();
//   adminframe.setVisible(true);
   
      String name = txtName.getText();
      Integer id = Integer.parseInt(txtID.getText());
      Integer age = Integer.parseInt(txtAge.getText());
      Integer phone = Integer.parseInt(txtPhoneNo.getText());
      String residence = txtResidence.getText();
      String community = txtCommunity.getText();
      Community c1=city.getCommunity(community);
       House house=new House(residence);
      if(c1.getCommunityName()!=null)
      {
          c1.addHouse(house);
          System.out.println("old community found:"+c1.getCommunityName());
      }
      else
      {
           c1.setCommunityName(community);
          c1.addHouse(house);
          city.addCommunity(c1);
          
            System.out.println("New community added:"+c1.getCommunityName());
            
      }
      
      
      Integer bp = Integer.parseInt(txtBP.getText());
      Integer pulse = Integer.parseInt(txtPulse.getText());
      Integer bt = Integer.parseInt(txtTemperature.getText());
      Integer respiration = Integer.parseInt(txtRespiration.getText());
      
      String timestamp = new SimpleDateFormat("MM/dd/yyyy").format(Calendar.getInstance().getTime());
      
      EncounterHistory encounterHistory = new EncounterHistory();
      VitalSigns vitalSigns = new VitalSigns( respiration, pulse, bp,bt);
      Encounter  encounter = new Encounter(timestamp, vitalSigns);
      encounterHistory.addNewEncounter(encounter);
      Patient pat=new Patient(encounterHistory,name,id,age,phone,city,house,c1);
      history.addPatient(pat);
    
      
      JOptionPane.showMessageDialog(this,"New Patient added.");
      
      txtName.setText("");
      txtID.setText("");
      txtAge.setText("");
      txtPhoneNo.setText("");
      txtResidence.setText("");
      txtCommunity.setText("");
     // txtCity.setText("");
      txtBP.setText("");
      txtPulse.setText("");
      txtTemperature.setText("");
      txtRespiration.setText("");
      ////////////////////////////////////////////////////////////////////////////////////////
      
    }//GEN-LAST:event_btnAdminLoginActionPerformed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
       String PATTERN="^[a-zA-Z- ]{5,10}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtName.getText());
       if(!match.matches()){
       jLabel17.setText("Name format is incorrect");
       }
       else{
       jLabel17.setText(null);
       }
       
       if((txtName.getText()).isEmpty()){
           jLabel17.setText("Name cannot be empty");
       }
    }//GEN-LAST:event_txtNameKeyReleased

    
    private void txtIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIDKeyReleased
        // TODO add your handling code here:
        String PATTERN1="^[0-9]{1,4}$";
       Pattern patt=Pattern.compile(PATTERN1);
       Matcher match=patt.matcher(txtID.getText().toString());
       if(!match.matches()){
       jLabel18.setText("Patient ID is incorrect");
       }
       
       else  {
       jLabel18.setText(null);
       }
        for(int i=0; i<history.getpatientDirectory().size(); i++){ 
            
            Patient p=history.getpatientDirectory().get(i);
            if (Integer.parseInt(txtID.getText())==p.getPatientID()){
                JOptionPane.showMessageDialog(this, "Duplicate Patient ID Found!","ERROR",JOptionPane.ERROR_MESSAGE);
            }}
//       
    }//GEN-LAST:event_txtIDKeyReleased
    
    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9]{1,3}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtAge.getText());
       if(!match.matches()){
       jLabel19.setText("Age format is incorrect");
       }
       else{
       jLabel19.setText(null);
       }
       
       if((txtAge.getText()).isEmpty()){
           jLabel19.setText("Age cannot be empty");
       }
        
        
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtPhoneNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneNoKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9]{9,9}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtPhoneNo.getText());
       if(!match.matches()){
       jLabel20.setText("Mobile Number  is incorrect");
       }
       else{
       jLabel20.setText(null);
       }
       
       if((txtPhoneNo.getText()).isEmpty()){
           jLabel20.setText("Mobile Number cannot be empty");
       }
        
    }//GEN-LAST:event_txtPhoneNoKeyReleased

    private void txtResidenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResidenceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResidenceActionPerformed

    private void txtResidenceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtResidenceKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z-0-9- ]{5,15}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtResidence.getText());
       if(!match.matches()){
       jLabel21.setText("Residence is incorrect");
       }
       else{
       jLabel21.setText(null);
       }
       
       if((txtResidence.getText()).isEmpty()){
           jLabel21.setText("Residence cannot be empty");
       }
        
    }//GEN-LAST:event_txtResidenceKeyReleased

    private void txtCommunityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCommunityKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[a-zA-Z]{5,9}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtCommunity.getText());
       if(!match.matches()){
       jLabel22.setText("Community format is incorrect");
       }
       else{
       jLabel22.setText(null);
       }
       
       if((txtCommunity.getText()).isEmpty()){
           jLabel22.setText("Community cannot be empty");
       }
        
    }//GEN-LAST:event_txtCommunityKeyReleased

    private void txtBPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBPActionPerformed

    private void txtBPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBPKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9-. ]{1,5}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtBP.getText());
       if(!match.matches()){
       txtBP.setBackground(Color.red);
       }
       else{
       txtBP.setBackground(Color.green);
       }
       
       if((txtBP.getText()).isEmpty()){
           txtBP.setBackground(Color.red);
       }
    }//GEN-LAST:event_txtBPKeyReleased

    private void txtPulseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPulseKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9-. ]{1,5}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtPulse.getText());
       if(!match.matches()){
       txtPulse.setBackground(Color.red);
       }
       else{
       txtPulse.setBackground(Color.green);
       }
       
       if((txtPulse.getText()).isEmpty()){
           txtPulse.setBackground(Color.red);
       }
        
    }//GEN-LAST:event_txtPulseKeyReleased

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed

    private void txtTemperatureKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperatureKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9-. ]{1,5}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtTemperature.getText());
       if(!match.matches()){
       txtTemperature.setBackground(Color.red);
       }
       else{
       txtTemperature.setBackground(Color.green);
       }
       
       if((txtTemperature.getText()).isEmpty()){
           txtTemperature.setBackground(Color.red);
       }
    }//GEN-LAST:event_txtTemperatureKeyReleased

    private void txtRespirationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRespirationKeyReleased
        // TODO add your handling code here:
        String PATTERN="^[0-9-. ]{1,5}$";
       Pattern patt=Pattern.compile(PATTERN);
       Matcher match=patt.matcher(txtRespiration.getText());
       if(!match.matches()){
       txtRespiration.setBackground(Color.red);
       }
       else{
       txtRespiration.setBackground(Color.green);
       }
       
       if((txtRespiration.getText()).isEmpty()){
           txtRespiration.setBackground(Color.red);
       }
        
    }//GEN-LAST:event_txtRespirationKeyReleased
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdminLogin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBP;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhoneNo;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtResidence;
    private javax.swing.JTextField txtRespiration;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
